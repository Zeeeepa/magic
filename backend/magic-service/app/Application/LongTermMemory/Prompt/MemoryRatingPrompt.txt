<goal>
给定一段用户与助手之间的对话。
你需要判断哪些信息可能对未来的对话有用，并值得记住。
</goal>

<conversation>
${topic.messages}
</conversation>

<positive_criteria>
- **高阶偏好**: 用户关于工作方式的宏观偏好（必须具体、可操作）。
- **通用模式**: 用户喜欢的、包含明确指导的通用方法或模式。
- **技术与工具**: 具体的技术或工具偏好（例如，明确的风格规则、软件选择）。
- **痛点与规避**: 用户提到需要避免的、足够具体的常见痛点或挫败点。
- **工作流程**: 包含具体步骤或规则的工作流程偏好。
- **反复出现的主题**: 在用户请求中反复出现，并能指导未来响应的明确主题。
- **明确要求**: 用户明确要求AI记住的事情。
- **强烈观点**: 用户表达的、足够具体并可指导行动的强烈个人观点。
</positive_criteria>

<negative_criteria>
- **一次性细节**: 仅适用于当前任务、不具备通用性的细节。
- **实现细节**: 不会被复用的具体实现过程。
- **临时上下文**: 在未来对话中不再有意义的临时信息。
- **非用户来源**: 纯粹来自助手、而非用户表达的观点或信息。
- **适用性过窄**: 仅适用于对话中某个具体项目或元素，无法广泛应用的信息。
- **模糊偏好**: 模糊、无法指导行动或显而易见的偏好（例如“喜欢组织良好的内容”）。
- **普适良好实践**: 任何用户都会认同的通用良好实践（例如“注重质量”）。
- **基础通用原则**: 非常基础的、普遍适用的原则（例如“关注效率”）。
</negative_criteria>

<examples_should_not_remember>
task-specific-detail: 在这个特定报告中，需要调整第三部分的标题。（特定于当前任务）
choice-in-context: 在这个特定文档中，使用“client”而不是“customer”。（实现细节）
source-used: 这个信息来自特定来源。（特定于当前上下文）
minor-adjustment: 需要在这个段落中添加额外的空格。（高度具体的细节）
vague-navigation: 用户经常需要处理导航相关逻辑。（过于模糊）
organization-preference: 用户喜欢组织良好的内容。（过于显而易见和模糊）
importance-of-quality: 质量对用户很重要。（过于显而易见）
basic-handling: 用户希望有良好的处理机制。（不可操作）
problem-solving-strategy: 倾向于将复杂问题分解为更小的部分，并在尝试替代方案前系统地处理它们。（描述了一种常见的、有些显而易见的通用方法）
basic-principles: 基本的通用原则，如关注效率、避免重复等。（过于显而易见和模糊）


# 关于“坏记忆”的深入分析

#### 场景一：用户对具体实现方案的确认
**对话示例**:
- 用户：“我只想让 `calculate_discount` 这个函数对‘高级会员’生效。我在函数里加了个 `if user.is_premium:` 的判断，这样做对吗？”
- 助手：“是的，这样做是正确的。在 `calculate_discount` 函数内部增加一个条件判断来检查用户会员状态，是确保它只为高级会员运行的好方法。”

**不恰当的记忆**:
`功能控制: 在函数内通过条件判断来控制功能是否执行。`

**为什么这是个坏记忆**:
这更像是一个普遍的编程实践，而非用户独特的个人偏好。用户的提问只是为了确认当前具体的技术实现方案是否可行，并没有表达一种希望未来所有类似场景都遵循的通用规则。将这种一次性的技术细节确认为用户的长期偏好，属于对用户意图的过度解读，不应被记忆。

## 场景二：用户仅针对当前任务提问
**对话示例**:
- 用户：我正在处理一个任务，想把一个步骤分离出来。应该先做清理还是先做验证？
- 助手：最好先清理再验证，这样可以确保验证步骤处理的是规范化数据。

**不恰当的记忆**:
`顺序偏好: 在这个任务中，总是在验证之前进行清理。`

**为什么这是个坏记忆**:
这是一个关于特定任务中步骤顺序的一次性细节。用户并未表达一个通用的工作流程偏好，只是在为当前具体问题寻求建议。因此，这不应被固化为未来所有场景的通用规则。

</examples_should_not_remember>

<examples_should_remember>

length-preference: 保持文档在5页以下以维持可读性。（具体且可操作）
prefer-method: 使用一种特定风格而不是另一种。（影响工作的明确偏好）
strict-mode: 在项目中始终启用特定设置。（具体配置）
planning-approach: 在实现新任务之前制定计划。（明确的工作流程偏好）
tool-choice: 对于新的工作，倾向于使用工具A而不是工具B。（明确的技术选择）
pre-step: 在进行主要任务前，先完成准备步骤。（具体的工作流程步骤）
layout-preference: 工作使用特定布局或工具。（具体的技术选择）
</examples_should_remember>

<labeling_instructions>
标签应能概括所提取的通用概念，只能包含小写字母和连字符（'-'），并用作记忆的唯一标识。
</labeling_instructions>

<formatting_instructions>
你的输出必须严格遵守以下两种格式之一：

1.  **如果提取到有效记忆**，请使用此 JSON 格式：
    ```json
    {
      "explanation": "在此解释为什么这条记忆值得记录。请对照正反两面的标准，清晰说明它符合了哪些正面标准，同时又避免了哪些负面标准。",
      "memory": "一条从对话中提炼出的、简短的通用偏好或方法，最多不超过三句话，且不应包含具体对话的引用。",
      "tags": ["标签名称一", "标签名称二"]
    }
    ```

2.  **如果未提取到有效记忆**，请直接返回以下字符串：
    "no_memory_needed"
</formatting_instructions>